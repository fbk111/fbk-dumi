import{_ as s,o as n,c as a,a as e}from"./app.265a17df.js";const l="/assets/js创建对象错误写法.ce95ef79.png",r="/assets/正确写法.8f4b5d9d.png",y=JSON.parse('{"title":"js的原型对象","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.基本类型：string,number,boolean,object,null,undefined","slug":"_1-基本类型-string-number-boolean-object-null-undefined","link":"#_1-基本类型-string-number-boolean-object-null-undefined","children":[]},{"level":2,"title":"2.引用类型: String,Number,Booelan,Object,Function,Array,Date,RegExp,Error","slug":"_2-引用类型-string-number-booelan-object-function-array-date-regexp-error","link":"#_2-引用类型-string-number-booelan-object-function-array-date-regexp-error","children":[]}],"relativePath":"js/原型对象.md","lastUpdated":1672418623000}'),o={name:"js/原型对象.md"},p=e(`<h1 id="js的原型对象" tabindex="-1">js的原型对象 <a class="header-anchor" href="#js的原型对象" aria-hidden="true">#</a></h1><p>作者: fbk 时间：2022-12-16 地点：济南</p><blockquote><p>足够优秀再大方拥有</p></blockquote><h1 id="_1-分类" tabindex="-1">1.分类 <a class="header-anchor" href="#_1-分类" aria-hidden="true">#</a></h1><h2 id="_1-基本类型-string-number-boolean-object-null-undefined" tabindex="-1">1.基本类型：string,number,boolean,object,null,undefined <a class="header-anchor" href="#_1-基本类型-string-number-boolean-object-null-undefined" aria-hidden="true">#</a></h2><h2 id="_2-引用类型-string-number-booelan-object-function-array-date-regexp-error" tabindex="-1">2.引用类型: String,Number,Booelan,Object,Function,Array,Date,RegExp,Error <a class="header-anchor" href="#_2-引用类型-string-number-booelan-object-function-array-date-regexp-error" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">=new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1234</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h1 id="_2-创建对象的过程" tabindex="-1">2.创建对象的过程 <a class="header-anchor" href="#_2-创建对象的过程" aria-hidden="true">#</a></h1><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Monther</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">lastName</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">lastName</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">lastName</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> son</span><span style="color:#89DDFF;">=new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Mother</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">da</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">1.创建了新对象 son.__proto__会和Mother.prototype联系起来</span></span>
<span class="line"><span style="color:#A6ACCD;">2.新对象和函数会用Mother.call(son,&#39;da&#39;)进行绑定</span></span>
<span class="line"><span style="color:#A6ACCD;">3.执行代码</span></span>
<span class="line"><span style="color:#A6ACCD;">4.如果mother里边没有返回值，则返回创建的对象实例</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>错误写法</code></p><p><img src="`+l+'" alt=""></p><p><code>正确写法</code></p><p><img src="'+r+'" alt=""></p>',14),t=[p];function c(i,d,b,u,m,h){return n(),a("div",null,t)}const A=s(o,[["render",c]]);export{y as __pageData,A as default};
