import{_ as s,o as n,c as a,a as l}from"./app.19465836.js";const A=JSON.parse('{"title":"移除元素-对应力扣27-简单","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.题目","slug":"_1-题目","link":"#_1-题目","children":[]},{"level":2,"title":"2.示例","slug":"_2-示例","link":"#_2-示例","children":[]}],"relativePath":"算法/移除元素-27.md","lastUpdated":1672415033000}'),p={name:"算法/移除元素-27.md"},e=l(`<h1 id="移除元素-对应力扣27-简单" tabindex="-1">移除元素-对应力扣27-简单 <a class="header-anchor" href="#移除元素-对应力扣27-简单" aria-hidden="true">#</a></h1><p>作者: fbk 时间：2022-12-16 地点：济南</p><blockquote><p>足够优秀再大方拥有</p></blockquote><h1 id="_1-原题" tabindex="-1">1.原题 <a class="header-anchor" href="#_1-原题" aria-hidden="true">#</a></h1><h2 id="_1-题目" tabindex="-1">1.题目 <a class="header-anchor" href="#_1-题目" aria-hidden="true">#</a></h2><p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。 不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。 元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><h2 id="_2-示例" tabindex="-1">2.示例 <a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a></h2><p>输入：nums = [3,2,2,3], val = 3 输出：2, nums = [2,2] 解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</p><h1 id="_2-思路-本题暂不讨论暴力解法" tabindex="-1">2.思路（本题暂不讨论暴力解法） <a class="header-anchor" href="#_2-思路-本题暂不讨论暴力解法" aria-hidden="true">#</a></h1><p>其实这道题很明显是采用双指针的解决思路，定义一个快指针，定义一个慢指针，然后在for循环中便利数组，快指针如果和val相等的话，很明显。就不能使用慢指针进行覆盖，而如果不相等的话，就需要使用慢指针进行覆盖。</p><h1 id="_3-步骤" tabindex="-1">3.步骤 <a class="header-anchor" href="#_3-步骤" aria-hidden="true">#</a></h1><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">removeElement</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">nums</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">//定义一个快指针，一个慢指针</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> slow</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> fast</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fast</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">fast</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">fast</span><span style="color:#89DDFF;">++){</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">fast</span><span style="color:#89DDFF;">]!=</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">             nums</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">slow</span><span style="color:#89DDFF;">]=</span><span style="color:#A6ACCD;">nums</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">fast</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#A6ACCD;">             slow</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> slow</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,12),o=[e];function t(r,c,D,i,y,C){return n(),a("div",null,o)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
