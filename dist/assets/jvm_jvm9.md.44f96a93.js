import{_ as e,o as a,c as i,a as t}from"./app.1ab3fa21.js";const v=JSON.parse('{"title":"jvm-垃圾回收器","description":"","frontmatter":{},"headers":[{"level":2,"title":"GC 分类与性能指标","slug":"gc-分类与性能指标","link":"#gc-分类与性能指标","children":[{"level":3,"title":"垃圾回收器概述","slug":"垃圾回收器概述","link":"#垃圾回收器概述","children":[]},{"level":3,"title":"垃圾回收器分类","slug":"垃圾回收器分类","link":"#垃圾回收器分类","children":[]}]}],"relativePath":"jvm/jvm9.md","lastUpdated":1676813369000}'),l={name:"jvm/jvm9.md"},r=t('<h1 id="jvm-垃圾回收器" tabindex="-1">jvm-垃圾回收器 <a class="header-anchor" href="#jvm-垃圾回收器" aria-hidden="true">#</a></h1><p>作者: fbk 时间：2023-2-17 地点：济南</p><h2 id="gc-分类与性能指标" tabindex="-1">GC 分类与性能指标 <a class="header-anchor" href="#gc-分类与性能指标" aria-hidden="true">#</a></h2><h3 id="垃圾回收器概述" tabindex="-1">垃圾回收器概述 <a class="header-anchor" href="#垃圾回收器概述" aria-hidden="true">#</a></h3><ol><li>垃圾收集器没有在规范中进行过多的规定，可以由不同的厂商、不同版本的JVM来实现。</li><li>由于JDK的版本处于高速迭代过程中，因此Java发展至今已经衍生了众多的GC版本。</li><li>从不同角度分析垃圾收集器，可以将GC分为不同的类型。</li></ol><p><code>Java不同版本新特性</code></p><ol><li>语法层面：Lambda表达式、switch、自动拆箱装箱、enum、泛型</li><li>API层面：Stream API、新的日期时间、Optional、String、集合框架</li><li>底层优化：JVM优化、GC的变化、元空间、静态域、字符串常量池等</li></ol><h3 id="垃圾回收器分类" tabindex="-1">垃圾回收器分类 <a class="header-anchor" href="#垃圾回收器分类" aria-hidden="true">#</a></h3>',8),d=[r];function n(c,s,h,o,_,m){return a(),i("div",null,d)}const u=e(l,[["render",n]]);export{v as __pageData,u as default};
