import{_ as t,o as e,c as a,a as p}from"./app.7d82a591.js";const d="/assets/http1.0请求示意图.49f86eeb.png",H=JSON.parse('{"title":"http1,http2,http3的区别","description":"","frontmatter":{},"headers":[],"relativePath":"计算机基础.md/Http1,Http2,Http3的区别.md","lastUpdated":1672418623000}'),h={name:"计算机基础.md/Http1,Http2,Http3的区别.md"},o=p('<h1 id="http1-http2-http3的区别" tabindex="-1">http1,http2,http3的区别 <a class="header-anchor" href="#http1-http2-http3的区别" aria-hidden="true">#</a></h1><p>作者: fbk 时间：2022-12-29 地点：济南</p><blockquote><p>足够优秀再大方拥有</p></blockquote><h1 id="http1-0" tabindex="-1">Http1.0 <a class="header-anchor" href="#http1-0" aria-hidden="true">#</a></h1><p>浏览器至于服务器短暂连接，每次请求都要建立一个<code>TCP</code>连接，请求完成后立即断开<code>TCP</code>连接 <img src="'+d+'" alt=""> 例如：在请求一个<code>html</code>文件，文件存在多个资源又要重新建立<code>TCP</code>请求去请求数据</p><h1 id="http1-1" tabindex="-1">Http1.1 <a class="header-anchor" href="#http1-1" aria-hidden="true">#</a></h1><p><code>http1.1</code>默认支持长连接，在一个<code>TCP</code>中可以传送多个<code>http</code>请求和响应 <code>http1.1</code>允许客户端不用等待上一次请求的返回结果就可以发送下一次请求，但服务器必须按照接收到客户端的请求先后书勋依次返回请求结果</p><h1 id="http2-0" tabindex="-1">Http2.0 <a class="header-anchor" href="#http2-0" aria-hidden="true">#</a></h1><p><code>http2</code>在`TCP``连接中可以同时发送多个请求或者响应，而且不用按照顺序一一对应，避免了对头阻塞</p>',9),c=[o];function r(s,_,n,i,l,f){return e(),a("div",null,c)}const u=t(h,[["render",r]]);export{H as __pageData,u as default};
